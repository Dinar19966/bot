import Parser from 'rss-parser';
import OpenAI from 'openai';
import TelegramBot from 'node-telegram-bot-api';
import 'dotenv/config';

const parser = new Parser();

// üí° OpenRouter –≤–º–µ—Å—Ç–æ OpenAI (https://openrouter.ai)
const openai = new OpenAI({
  apiKey: process.env.OPENROUTER_API_KEY!,
  baseURL: 'https://openrouter.ai/api/v1',
  defaultHeaders: {
    'HTTP-Referer': 'https://github.com/Dinar19966', // —É–∫–∞–∂–∏ —Å–≤–æ–π —Å–∞–π—Ç –∏–ª–∏ github
    'X-Title': 'NewsBot by Student',
  },
});

const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN!, { polling: false });
const CHAT_ID = process.env.TELEGRAM_CHAT_ID!;

// –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –Ω–æ–≤–æ—Å—Ç–µ–π
async function fetchNews(): Promise<Array<{ title: string; link: string }>> {
  const feed = await parser.parseURL('https://lenta.ru/rss/news');
  return feed.items.slice(0, 5).map(item => ({
    title: item.title ?? '',
    link: item.link ?? '',
  }));
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ —Å–∂–∞—Ç–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ —Å –ø–æ–º–æ—â—å—é OpenRouter
async function generateNews(prompt: string): Promise<string> {
  try {
    const response = await openai.chat.completions.create({
model: 'openai/gpt-3.5-turbo',
      messages: [
        { role: 'system', content: '–¢—ã –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –±–æ—Ç. –ü–∏—à–∏ –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ —Å—É—â–µ—Å—Ç–≤—É.' },
        { role: 'user', content: prompt },
      ],
      temperature: 0.7,
    });

    return response.choices[0].message?.content ?? '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å.';
  } catch (error) {
    console.error('OpenRouter error:', error);
    return '‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞.';
  }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ—Å—Ç–∏ –≤ Telegram
async function postToTelegram(message: string) {
  await bot.sendMessage(CHAT_ID, message, { disable_web_page_preview: false });
}

// –ì–ª–∞–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å
async function runNewsBot() {
  const newsItems = await fetchNews();

  for (const news of newsItems) {
    const prompt = `${news.title}. –°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –∫–æ—Ä–æ—Ç–∫—É—é —Å—É—Ç—å. –ü–æ–¥—Ä–æ–±–Ω–µ–µ: ${news.link}`;
    const summary = await generateNews(prompt);
    const message = `üóû ${summary}\nüîó ${news.link}`;
    await postToTelegram(message);
  }
}

runNewsBot().catch(console.error);
